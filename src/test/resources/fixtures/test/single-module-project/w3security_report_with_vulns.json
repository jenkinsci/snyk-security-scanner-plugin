{
  "vulnerabilities": [
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
      "alternativeIds": [],
      "creationTime": "2016-12-25T16:51:56Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 7.5,
      "description": "## Overview\n[`commons-fileupload:commons-fileupload`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22commons-fileupload%22) provides a simple yet flexible means of adding support for multipart file upload functionality to servlets and web applications.\n\nAffected versions of this package are vulnerable to Denial of Service (DoS) attacks. An attacker can upload a file with a long boundry string in the HTTP header, causing high CPU consumption. The `MultipartStream` class contains a flaw that allows remote attackers to cause a Denial of service (CPU consumption) attacks. This happens by setting the length of the multipart boundary to be just below the size of the buffer (4096 bytes) used to read the uploaded file. Typically, the boundary is tens of bytes long, which caused this case to take much longer than usual.\n\n## Details\nDenial of Service (DoS) describes a family of attacks, all aimed at making a system inaccessible to its intended and legitimate users.\r\n\r\nUnlike other vulnerabilities, DoS attacks usually do not aim at breaching security. Rather, they are focused on making websites and services unavailable to genuine users resulting in downtime.\r\n\r\nOne popular Denial of Service vulnerability is DDoS (a Distributed Denial of Service), an attack that attempts to clog network pipes to the system by generating a large volume of traffic from many machines.\r\n\r\nWhen it comes to open source libraries, DoS vulnerabilities allow attackers to trigger such a crash or crippling of the service by using a flaw either in the application code or from the use of open source libraries.\r\n\r\nTwo common types of DoS vulnerabilities:\r\n\r\n* High CPU/Memory Consumption- An attacker sending crafted requests that could cause the system to take a disproportionate amount of time to process. For example, [commons-fileupload:commons-fileupload](SNYK-JAVA-COMMONSFILEUPLOAD-30082).\r\n\r\n* Crash - An attacker sending crafted requests that could cause the system to crash. For Example,  [npm `ws` package](npm:ws:20171108)\n\n## Remediation\nUpgrade `commons-fileupload:commons-fileupload` to version 1.3.2 or higher.\n\n## References\n- [Github ChangeLog](https://github.com/apache/commons-fileupload/blob/b1498c9877d751f8bc4635a6f252ebdfcba28518/src/changes/changes.xml#L84)\n- [Redhat Bugzilla](https://bugzilla.redhat.com/show_bug.cgi?id=1349475)\n- [Apache Mailing Archives](http://mail-archives.us.apache.org/mod_mbox/www-announce/201606.mbox/%3C6223ece6-2b41-ef4f-22f9-d3481e492832@apache.org%3E)\n- [Apache-SVN](http://svn.apache.org/viewvc/commons/proper/fileupload/trunk/RELEASE-NOTES.txt?r1=1745717&r2=1749637&diff_format=h)\n- [CVE](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-3092)\n",
      "disclosureTime": "2016-06-22T16:51:56Z",
      "exploit": "Not Defined",
      "fixedIn": [
        "1.3.2"
      ],
      "functions": [],
      "functions_new": [],
      "id": "SNYK-JAVA-COMMONSFILEUPLOAD-30082",
      "identifiers": {
        "CVE": [
          "CVE-2016-3092"
        ],
        "CWE": [
          "CWE-20"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "commons-fileupload",
        "groupId": "commons-fileupload"
      },
      "modificationTime": "2019-06-02T07:36:42.354413Z",
      "moduleName": "commons-fileupload:commons-fileupload",
      "packageManager": "maven",
      "packageName": "commons-fileupload:commons-fileupload",
      "patches": [],
      "publicationTime": "2016-06-22T16:51:56Z",
      "references": [
        {
          "title": "Apache Mailing Archives",
          "url": "http://mail-archives.us.apache.org/mod_mbox/www-announce/201606.mbox/%3C6223ece6-2b41-ef4f-22f9-d3481e492832@apache.org%3E"
        },
        {
          "title": "Apache-SVN",
          "url": "http://svn.apache.org/viewvc/commons/proper/fileupload/trunk/RELEASE-NOTES.txt?r1=1745717&r2=1749637&diff_format=h"
        },
        {
          "title": "CVE",
          "url": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-3092"
        },
        {
          "title": "Github ChangeLog",
          "url": "https://github.com/apache/commons-fileupload/blob/b1498c9877d751f8bc4635a6f252ebdfcba28518/src/changes/changes.xml%23L84"
        },
        {
          "title": "Possible GitHub Commit",
          "url": "https://github.com/apache/tomcat80/commit/d752a415a875e888d8c8d0988dfbde95c2c6fb1d"
        },
        {
          "title": "Possible GitHub Commit",
          "url": "https://github.com/apache/tomcat/commit/2c3553f3681baf775c50bb0b49ea61cb44ea914f"
        },
        {
          "title": "Possible GitHub Commit",
          "url": "https://github.com/apache/tomcat/commit/8999f8243197a5f8297d0cb1a0d86ed175678a77"
        },
        {
          "title": "Redhat Bugzilla",
          "url": "https://bugzilla.redhat.com/show_bug.cgi?id=1349475"
        }
      ],
      "semver": {
        "vulnerable": [
          "[1.3,1.3.2)"
        ]
      },
      "severity": "high",
      "title": "Denial of Service (DoS)",
      "from": [
        "io.github.w3security:todolist-web-struts@0.0.1",
        "org.apache.struts:struts2-core@2.3.20",
        "commons-fileupload:commons-fileupload@1.3.1"
      ],
      "upgradePath": [
        false,
        "org.apache.struts:struts2-core@2.3.30",
        "commons-fileupload:commons-fileupload@1.3.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-fileupload:commons-fileupload",
      "version": "1.3.1"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
      "alternativeIds": [],
      "creationTime": "2017-02-22T07:28:18.753000Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 9.8,
      "description": "## Overview\n[`commons-fileupload:commons-fileupload`](http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22commons-fileupload%22)\nThe Apache Commons FileUpload library contains a Java Object that, upon deserialization, can be manipulated to write or copy files in arbitrary locations. If integrated with [`ysoserial`](https://github.com/frohoff/ysoserial), it is possible to upload and execute binaries in a single deserialization call.\n\n# Details\nSerialization is a process of converting an object into a sequence of bytes which can be persisted to a disk or database or can be sent through streams. The reverse process of creating object from sequence of bytes is called deserialization. Serialization is commonly used for communication (sharing objects between multiple hosts) and persistence (store the object state in a file or a database). It is an integral part of popular protocols like _Remote Method Invocation (RMI)_, _Java Management Extension (JMX)_, _Java Messaging System (JMS)_, _Action Message Format (AMF)_, _Java Server Faces (JSF) ViewState_, etc.\n\n_Deserialization of untrusted data_ ([CWE-502](https://cwe.mitre.org/data/definitions/502.html)), is when the application deserializes untrusted data without sufficiently verifying that the resulting data will be valid, letting the attacker to control the state or the flow of the execution.\n\nJava deserialization issues have been known for years. However, interest in the issue intensified greatly in 2015, when classes that could be abused to achieve remote code execution were found in a [popular library (Apache Commons Collection)](https://w3security.io/vuln/SNYK-JAVA-COMMONSCOLLECTIONS-30078). These classes were used in zero-days affecting IBM WebSphere, Oracle WebLogic and many other products.\n\nAn attacker just needs to identify a piece of software that has both a vulnerable class on its path, and performs deserialization on untrusted data. Then all they need to do is send the payload into the deserializer, getting the command executed.\n\n> Developers put too much trust in Java Object Serialization. Some even de-serialize objects pre-authentication. When deserializing an Object in Java you typically cast it to an expected type, and therefore Java's strict type system will ensure you only get valid object trees. Unfortunately, by the time the type checking happens, platform code has already created and executed significant logic. So, before the final type is checked a lot of code is executed from the readObject() methods of various objects, all of which is out of the developer's control. By combining the readObject() methods of various classes which are available on the classpath of the vulnerable application an attacker can execute functions (including calling Runtime.exec() to execute local OS commands).\n- Apache Blog\n\n## Remediation\nUpgrade `commons-fileupload` to version 1.3.3 or higher.\n\n\n## References\n- [NVD](https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-1000031)\n- [Tenable Security](http://www.tenable.com/security/research/tra-2016-12)\n- [Github ChangeLog](https://github.com/apache/commons-fileupload/blob/master/src/changes/changes.xml#L65)\n- [Github Commit](https://github.com/apache/commons-fileupload/commit/388e824518697c2c8f9f83fd964621d9c2f8fc4c)\n",
      "disclosureTime": "2016-10-25T14:29:00Z",
      "exploit": "Not Defined",
      "fixedIn": [
        "1.3.3"
      ],
      "functions": [
        {
          "functionId": {
            "className": "DiskFileItem",
            "filePath": "org/apache/commons/fileupload/disk/DiskFileItem.java",
            "functionName": "readObject"
          },
          "version": [
            "[1.1,1.3.3)"
          ]
        }
      ],
      "functions_new": [
        {
          "functionId": {
            "className": "org.apache.commons.fileupload.disk.DiskFileItem",
            "functionName": "readObject"
          },
          "version": [
            "[1.1,1.3.3)"
          ]
        }
      ],
      "id": "SNYK-JAVA-COMMONSFILEUPLOAD-30401",
      "identifiers": {
        "CVE": [
          "CVE-2016-1000031"
        ],
        "CWE": [
          "CWE-284"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "commons-fileupload",
        "groupId": "commons-fileupload"
      },
      "modificationTime": "2019-06-02T07:36:59.369724Z",
      "moduleName": "commons-fileupload:commons-fileupload",
      "packageManager": "maven",
      "packageName": "commons-fileupload:commons-fileupload",
      "patches": [],
      "publicationTime": "2016-10-26T03:04:11.895000Z",
      "references": [
        {
          "title": "Github ChangeLog",
          "url": "https://github.com/apache/commons-fileupload/blob/master/src/changes/changes.xml%23L65"
        },
        {
          "title": "Github Commit",
          "url": "https://github.com/apache/commons-fileupload/commit/388e824518697c2c8f9f83fd964621d9c2f8fc4c"
        },
        {
          "title": "NVD",
          "url": "https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2016-1000031"
        },
        {
          "title": "Tenable Security",
          "url": "http://www.tenable.com/security/research/tra-2016-12"
        }
      ],
      "semver": {
        "vulnerable": [
          "[1.1,1.3.3)"
        ]
      },
      "severity": "high",
      "title": "Arbitrary Code Execution",
      "from": [
        "io.github.w3security:todolist-web-struts@0.0.1",
        "org.apache.struts:struts2-core@2.3.20",
        "commons-fileupload:commons-fileupload@1.3.1"
      ],
      "upgradePath": [
        false,
        "org.apache.struts:struts2-core@2.3.37",
        "commons-fileupload:commons-fileupload@1.4"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-fileupload:commons-fileupload",
      "version": "1.3.1"
    },
    {
      "CVSSv3": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N",
      "alternativeIds": [],
      "creationTime": "2017-10-01T08:05:48.497000Z",
      "credit": [
        "Unknown"
      ],
      "cvssScore": 6.5,
      "description": "## Overview\n[`commons-fileupload:commons-fileupload`](https://commons.apache.org/proper/commons-fileupload/) provides a simple yet flexible means of adding support for multipart file upload functionality to servlets and web applications.\n\nAffected versions of the package are vulnerable to Information Disclosure because the `InputStream` is not closed on exception.\n\n## Remediation\nUpgrade `commons-fileupload` to version 1.3.2 or higher.\n\n## References\n- [Github ChangeLog](https://github.com/apache/commons-fileupload/blob/master/src/changes/changes.xml#L56)\n- [Github Commit](https://github.com/apache/commons-fileupload/commit/5b4881d7f75f439326f54fa554a9ca7de6d60814)\n",
      "disclosureTime": "2014-02-17T22:00:00Z",
      "exploit": "Not Defined",
      "fixedIn": [
        "1.3.2"
      ],
      "functions": [
        {
          "functionId": {
            "className": "FileUploadBase$FileItemIteratorImpl",
            "filePath": "org/apache/commons/fileupload/FileUploadBase$FileItemIteratorImpl.java",
            "functionName": "<init>"
          },
          "version": [
            "[1.2.0 ,1.3.2)"
          ]
        }
      ],
      "functions_new": [
        {
          "functionId": {
            "className": "org.apache.commons.fileupload.FileUploadBase$FileItemIteratorImpl",
            "functionName": "<init>"
          },
          "version": [
            "[1.2.0 ,1.3.2)"
          ]
        }
      ],
      "id": "SNYK-JAVA-COMMONSFILEUPLOAD-31540",
      "identifiers": {
        "CVE": [],
        "CWE": [
          "CWE-200"
        ]
      },
      "language": "java",
      "mavenModuleName": {
        "artifactId": "commons-fileupload",
        "groupId": "commons-fileupload"
      },
      "modificationTime": "2019-03-20T14:28:31.441873Z",
      "moduleName": "commons-fileupload:commons-fileupload",
      "packageManager": "maven",
      "packageName": "commons-fileupload:commons-fileupload",
      "patches": [],
      "publicationTime": "2017-02-17T08:05:48.497000Z",
      "references": [
        {
          "title": "Github ChangeLog",
          "url": "https://github.com/apache/commons-fileupload/blob/master/src/changes/changes.xml%23L56"
        },
        {
          "title": "Github Commit",
          "url": "https://github.com/apache/commons-fileupload/commit/5b4881d7f75f439326f54fa554a9ca7de6d60814"
        }
      ],
      "semver": {
        "vulnerable": [
          "[,1.3.2)"
        ]
      },
      "severity": "medium",
      "title": "Information Disclosure",
      "from": [
        "io.github.w3security:todolist-web-struts@0.0.1",
        "org.apache.struts:struts2-core@2.3.20",
        "commons-fileupload:commons-fileupload@1.3.1"
      ],
      "upgradePath": [
        false,
        "org.apache.struts:struts2-core@2.3.30",
        "commons-fileupload:commons-fileupload@1.3.2"
      ],
      "isUpgradable": true,
      "isPatchable": false,
      "name": "commons-fileupload:commons-fileupload",
      "version": "1.3.1"
    }
  ],
  "ok": false,
  "dependencyCount": 10,
  "org": "jenkins-junit-org",
  "policy": "# W3Security (https://w3security.io) policy file, patches or ignores known vulnerabilities.\nversion: v1.14.0\nignore: {}\npatch: {}\n",
  "isPrivate": true,
  "licensesPolicy": {
    "severities": {},
    "orgLicenseRules": {}
  },
  "packageManager": "maven",
  "ignoreSettings": null,
  "summary": "3 vulnerable dependency paths",
  "filesystemPolicy": false,
  "filtered": {
    "ignore": [],
    "patch": []
  },
  "uniqueCount": 3,
  "path": "/home/jenkins/projects/single-module-project"
}
